name: Build, Publish, and Release Docker Images

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        default: 'test the action'

jobs:
  create_release:
    name: Create Release and Compress Images
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Pull and Compress Docker Images
        run: |
          # Define the image names and tags you used in the previous step
          IMAGE_NAMES_TAGS="minsdatadocker/frps:v$FRP_VERSION minsdatadocker/frpc:v$FRP_VERSION"
          FRP_ARCHS="linux_amd64 linux_arm64 linux_ppc64le linux_s390x linux_386 linux_arm_v8 linux_arm_v7 linux_arm_v6"

          # Loop through each image and tag
          for name_tag in $IMAGE_NAMES_TAGS; do
            docker pull $name_tag
            image_name=$(echo $name_tag | cut -d':' -f1)
            image_tag=$(echo $name_tag | cut -d':' -f2)

            for frp_arch in $FRP_ARCHS; do
              new_image_name="${image_name}_${frp_arch}_v${image_tag}.gz"

              # Save the image and compress it
              docker save $name_tag | gzip > $new_image_name
            done
          done

      - name: Upload GZ Archives to GitHub Release
        uses: actions/upload-artifact@v2
        with:
          name: gz-archives
          path: ./

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: v$FRP_VERSION
          release_name: Release $FRP_VERSION
          body: This is release $FRP_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
