name: Build and Publish FRP Docker Images

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        default: 'test the action'

env:
  PLATFORMS: "linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v8,linux/arm/v7,linux/arm/v6"
  IMAGE_NAME_PREFIX: "minsdatadocker"

jobs:
  build_and_publish:
    name: Build and Publish Images
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get FRP Version
        id: get_version
        run: |
          FRP_VERSION=$(curl -s https://api.github.com/repos/fatedier/frp/releases/latest | jq -r .tag_name)
          FRP_VERSION=${FRP_VERSION#v}
          echo "FRP_VERSION=$FRP_VERSION" >> $GITHUB_ENV
      
      - name: Output FRP_VERSION
        run: |
          echo "FRP_VERSION: $FRP_VERSION"
          
      - name: Build and Push FRPS Docker image
        run: |
          DOCKERFILE="./dockerfiles/Dockerfile-for-frps"
          
          docker buildx build -f $DOCKERFILE \
            --build-arg FRP_VERSION=$FRP_VERSION \
            --platform $PLATFORMS \
            -t $IMAGE_NAME_PREFIX/frps:v$FRP_VERSION \
            -t $IMAGE_NAME_PREFIX/frps:latest \
            --push .

      - name: Build and Push FRPC Docker image
        run: |
          DOCKERFILE="./dockerfiles/Dockerfile-for-frpc"
          
          docker buildx build -f $DOCKERFILE \
            --build-arg FRP_VERSION=$FRP_VERSION \
            --platform $PLATFORMS \
            -t $IMAGE_NAME_PREFIX/frpc:v$FRP_VERSION \
            -t $IMAGE_NAME_PREFIX/frpc:latest \
            --push .

            
      - name: Create gz Archives
        run: |
          mkdir -p gz_archives
          docker save -o gz_archives/frps_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar $IMAGE_NAME_PREFIX/frps:v$FRP_VERSION
          tar czvf gz_archives/frps_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar.gz gz_archives/frps_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar
          rm gz_archives/frps_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar

          docker save -o gz_archives/frpc_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar $IMAGE_NAME_PREFIX/frpc:v$FRP_VERSION
          tar czvf gz_archives/frpc_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar.gz gz_archives/frpc_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar
          rm gz_archives/frpc_${FRP_VERSION}_${FRP_ARCH}_docker_image.tar

      - name: Upload gz Archives to GitHub Release
        uses: actions/upload-artifact@v2
        with:
          name: gz-archives
          path: gz_archives/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v$FRP_VERSION
          release_name: Release $FRP_VERSION
          body: This is release $FRP_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.REALSE_TOKEN }}
