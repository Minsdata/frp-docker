name: VerCheck Build Push Release Docker 
#normal mode
on:
  schedule:
    - cron: "0 0 */1 * *"

#test mode
#on:
#  workflow_dispatch:
#    inputs:
#      tag:
#        description: 'Image tag'
#        required: true
#        default: 'test the action'
        

jobs:
  build_and_publish:
    name: Build and Publish Images
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set environment variables for DockerhubRepo
        run: |
          echo "IMAGE_NAME_PREFIX=minsdatadocker" >> $GITHUB_ENV

      - name: Get latest Docker Hub version
        run: |
          DOCKERHUB_VERSION=$(curl -s https://hub.docker.com/v2/repositories/${{ env.IMAGE_NAME_PREFIX }}/frps/tags/ | jq -r '.results[].name' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -rV | head -n 1)
          echo "DOCKERHUB_VERSION=$DOCKERHUB_VERSION" >> $GITHUB_ENV

      - name: Get FRP Version
        run: |
          FRP_VERSION=$(curl -s https://api.github.com/repos/fatedier/frp/releases/latest | jq -r .tag_name)
          echo "FRP_VERSION=$FRP_VERSION" >> $GITHUB_ENV

      - name: Compare versions and skip if same
        run: |
          if [[ "$FRP_VERSION" == "$DOCKERHUB_VERSION" ]]; then
            echo "Versions are the same. Skipping build and publish."
            echo "SKIP_BUILD=true" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Set up QEMU
        if: env.SKIP_BUILD != 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: env.SKIP_BUILD != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: env.SKIP_BUILD != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set environment variables for PLATFORMS, DOCKERFILE, TAG
        if: env.SKIP_BUILD != 'true'
        run: |
          echo "PLATFORMS=linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v8,linux/arm/v7,linux/arm/v6" >> $GITHUB_ENV
          
          echo "DOCKERFILE_FRPS=./dockerfiles/Dockerfile-for-frps" >> $GITHUB_ENV
          echo "DOCKERFILE_FRPC=./dockerfiles/Dockerfile-for-frpc" >> $GITHUB_ENV
          
          echo "TAG_FRPS_VER=${{ env.IMAGE_NAME_PREFIX }}/frps:${{ env.FRP_VERSION }}" >> $GITHUB_ENV
          echo "TAG_FRPS_LATEST=${{ env.IMAGE_NAME_PREFIX }}/frps:latest" >> $GITHUB_ENV
          
          echo "TAG_FRPC_VER=${{ env.IMAGE_NAME_PREFIX }}/frpc:${{ env.FRP_VERSION }}" >> $GITHUB_ENV
          echo "TAG_FRPC_LATEST=${{ env.IMAGE_NAME_PREFIX }}/frpc:latest" >> $GITHUB_ENV

      - name: Build and Push FRPS Docker image
        if: env.SKIP_BUILD != 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ env.DOCKERFILE_FRPS }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ${{ env.TAG_FRPS_VER }}
            ${{ env.TAG_FRPS_LATEST }}

      - name: Build and Push FRPC Docker image
        if: env.SKIP_BUILD != 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ env.DOCKERFILE_FRPC }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ${{ env.TAG_FRPC_VER }}
            ${{ env.TAG_FRPC_LATEST }}



      - name: Create Release
        if: env.SKIP_BUILD != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MINSDATA_GITHUB }}
        with:
          tag_name: ${{ env.FRP_VERSION }}
          release_name: Release ${{ env.FRP_VERSION }}
          body: |

             ### Docker images  
             - Docker image for FRPS: [${{ env.IMAGE_NAME_PREFIX }}/frps:${{ env.FRP_VERSION }}](https://hub.docker.com/r/minsdatadocker/frps)  
             - Docker image for FRPC: [${{ env.IMAGE_NAME_PREFIX }}/frpc:${{ env.FRP_VERSION }}](https://hub.docker.com/r/minsdatadocker/frpc)  

             ### OS/Arch Support  
             - linux/amd64  
             - linux/arm64  
             - linux/arm/v6  
             - linux/arm/v7  
             - linux/arm/v8
             - linux/ppc64le  
             - linux/s390x  
     
             This Docker images are bulit from [fatedier/frp](https://github.com/fatedier/frp)  oringal source code latest relase automatically.
