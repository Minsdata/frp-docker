name: VerCheck Build Push Release Docker 
#normal mode
#on:
#  schedule:
#    - cron: "0 */6 * * *"

#test mode
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        default: 'test the action'

env:
#  PLATFORMS: "linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v8,linux/arm/v7,linux/arm/v6"
  IMAGE_NAME_PREFIX: "minsdatadocker"
  DOCKERFILE_FRPS: "./dockerfiles/Dockerfile-for-frps"
  DOCKERFILE_FRPC: "./dockerfiles/Dockerfile-for-frpc"

jobs:
  build_and_publish:
    name: Build and Publish Images
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Get latest Docker Hub version
        run: |
          DOCKERHUB_VERSION=$(curl -s https://hub.docker.com/v2/repositories/${IMAGE_NAME_PREFIX}/frps/tags/ | jq -r '.results[].name' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -rV | head -n 1 | awk -F 'v' '{print $2}')
          echo "DOCKERHUB_VERSION=$DOCKERHUB_VERSION" >> $GITHUB_ENV

      - name: Get FRP Version
        run: |
          FRP_VERSION=$(curl -s https://api.github.com/repos/fatedier/frp/releases/latest | jq -r .tag_name)
          FRP_VERSION=${FRP_VERSION#v}
          echo "FRP_VERSION=$FRP_VERSION" >> $GITHUB_ENV

      - name: Compare versions and skip if same
        run: |
          if [[ "$FRP_VERSION" != "$DOCKERHUB_VERSION" ]]; then
            echo "Versions are the same. Skipping build and publish."
            echo "SKIP_BUILD=true" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Set up QEMU
        if: env.SKIP_BUILD != 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: env.SKIP_BUILD != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: env.SKIP_BUILD != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

 #     - name: Build and Push FRPS Docker image
 #       if: env.SKIP_BUILD != 'true'
 #       run: |
 #         DOCKERFILE="./dockerfiles/Dockerfile-for-frps"
 #         
 #         docker buildx build -f $DOCKERFILE \
 #           --platform $PLATFORMS \
 #           -t $IMAGE_NAME_PREFIX/frps:v$FRP_VERSION \
 #           -t $IMAGE_NAME_PREFIX/frps:latest \
 #           --push .

      - name: Build and Push FRPS Docker image
        if: env.SKIP_BUILD != 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: $DOCKERFILE_FRPS
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v8,linux/arm/v7,linux/arm/v6
          push: true
          tags: |
            $IMAGE_NAME_PREFIX/frps:v$FRP_VERSION
            $IMAGE_NAME_PREFIX/frps:latest

 #     - name: Build and Push FRPC Docker image
 #       if: env.SKIP_BUILD != 'true'
 #       run: |
 #         DOCKERFILE="./dockerfiles/Dockerfile-for-frpc"
 #         
 #         docker buildx build -f $DOCKERFILE \
 #           --platform $PLATFORMS \
 #           -t $IMAGE_NAME_PREFIX/frpc:v$FRP_VERSION \
 #           -t $IMAGE_NAME_PREFIX/frpc:latest \
 #           --push .

      - name: Build and Push FRPC Docker image
        if: env.SKIP_BUILD != 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: $DOCKERFILE_FRPC
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v8,linux/arm/v7,linux/arm/v6
          push: true
          tags: |
            $IMAGE_NAME_PREFIX/frpc:v$FRP_VERSION
            $IMAGE_NAME_PREFIX/frpc:latest



      - name: Create Release
        if: env.SKIP_BUILD != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MINSDATA_GITHUB }}
        with:
          tag_name: v${{ env.FRP_VERSION }}
          release_name: Release v${{ env.FRP_VERSION }}
          body: |

             ### Docker images  
             - Docker image for FRPS: [${{ env.IMAGE_NAME_PREFIX }}/frps:v${{ env.FRP_VERSION }}](https://hub.docker.com/r/minsdatadocker/frps)  
             - Docker image for FRPC: [${{ env.IMAGE_NAME_PREFIX }}/frpc:v${{ env.FRP_VERSION }}](https://hub.docker.com/r/minsdatadocker/frpc)  

             ### OS/Arch Support  
             - linux/amd64  
             - linux/arm64  
             - linux/arm/v6  
             - linux/arm/v7  
             - linux/arm/v8
             - linux/ppc64le  
             - linux/s390x  
     
             This Docker images are bulit from [fatedier/frp](https://github.com/fatedier/frp)  oringal source code latest relase automatically.
